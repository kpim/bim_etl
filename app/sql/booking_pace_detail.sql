-- DROP TABLE dbo.booking_pace_detail
-- TRUNCATE TABLE dbo.booking_pace_detail;
CREATE TABLE dbo.booking_pace_detail (
    REPORT_DATE DATE, 
    STAY_MONTH NVARCHAR(7),
    PROPERTY NVARCHAR(50),
    ARRIVAL DATE, 
    DEPARTURE DATE,
    STAYING DATE,
    CREATE_DATE DATE,
    MARKET NVARCHAR(20),
    RATE_CODE NVARCHAR(20),
    RATE_AMT FLOAT,
    TOTAL_TURN_OVER DECIMAL(18,2),
    ARR DECIMAL(18,2),
    ROOM_REV DECIMAL(18,2),
    FB_REV DECIMAL(18,2),
    OTHER_REV DECIMAL(18,2),
    STATUS NVARCHAR(20),
    R_TYPE NVARCHAR(20),
    R_CHARGE NVARCHAR(20),
    N_OF_ROOM INT,
    N_OF_ADT INT,
    N_OF_CHD INT,
    BK_SOURCE NVARCHAR(20),
    COUNTRY NVARCHAR(20),
    NATIONALITY NVARCHAR(20),
    BOOKING BIT,

    CREATED_AT DATETIME,
    MODIFIED_AT DATETIME,
    FILE_NAME NVARCHAR(500)
);

/* ------------------------------------------------------------------------------------
-- Tạo sp mẫu đề Full Load và Incremental Load dữ liệu vào bảng booking_pace_detail
- Chú ý là trong code python sẽ có hàm init_sp_fload_booking_pace_detail() và init_sp_iload_booking_pace_detail() 
để tạo động các thủ tục ETL
*/
GO



CREATE OR ALTER PROCEDURE dbo.sp_fload_booking_pace_detail
        @today DATE = NULL
AS
BEGIN

SET NOCOUNT ON;
SET XACT_ABORT ON;

BEGIN TRAN;
BEGIN TRY;
    IF @today IS NULL SET @today = GETDATE()

    -- xóa toàn bộ dữ liệu của bảng
    TRUNCATE TABLE dbo.booking_pace_detail;


    -- đưa vào dữ liệu của khách sạn Sailing Club Signature Resort Phu Quoc
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrpq
    WHERE STAYING >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrpq
    WHERE REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Soul Boutique Hotel Phu Quoc
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_sbhpq
    WHERE STAYING >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_sbhpq
    WHERE REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Ha Long Plaza Hotel
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hlp
    WHERE STAYING >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hlp
    WHERE REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Syrena Cruises
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_src
    WHERE STAYING >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_src
    WHERE REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Sailing Club Signature Resort Ha Long Bay
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrhl
    WHERE STAYING >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrhl
    WHERE REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Park Hyatt Phu Quoc Residences
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_phpq
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_phpq
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn InterContinental Ha Long Bay Resort
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_ichl
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_ichl
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn InterContinental Phu Quoc Long Beach Resort
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_icpq
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_icpq
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Regent Phu Quoc
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_repq
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_repq
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Crowne Plaza Vientiane
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_cpv
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_cpv
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    -- đưa vào dữ liệu của khách sạn Holiday Inn & Suites Vientiane
    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hivt
    WHERE CONSIDERED_DATE >= REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    CREATED_AT, MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hivt
    WHERE REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, REPORT_DATE)
    
    COMMIT
    RETURN 0
END TRY
BEGIN CATCH
    ROLLBACK 
    DECLARE @ERROR_MESSAGE NVARCHAR(2000)
    SELECT @ERROR_MESSAGE = 'ERROR:' + ERROR_MESSAGE()
    RAISERROR(@ERROR_MESSAGE, 16, 1)
END CATCH
END

-- EXEC dbo.sp_fload_booking_pace_detail
GO


CREATE OR ALTER PROCEDURE dbo.sp_iload_booking_pace_detail AS
BEGIN

SET NOCOUNT ON;
SET XACT_ABORT ON;

BEGIN TRAN;
BEGIN TRY;
    DECLARE @last_modified_at DATETIME;
    DECLARE @today DATE = GETDATE();

    -- lấy thông tin dữ liệu sẽ bổ sung vào bảng đích
    DECLARE @iload_data TABLE (
        ID INT IDENTITY(1, 1),
        PROPERTY NVARCHAR(50),
        REPORT_DATE DATE, 
        MODIFIED_AT DATETIME
    )
    

    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'SCSRPQ')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_scsrpq WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng booking_pace_detail
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_scsrpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.STAYING >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, s.REPORT_DATE)
    
    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'SBHPQ')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_sbhpq WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng booking_pace_detail
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_sbhpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.STAYING >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_sbhpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, s.REPORT_DATE)
    
    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'HLP')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_hlp WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng booking_pace_detail
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_hlp s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.STAYING >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hlp s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, s.REPORT_DATE)
    
    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'SRC')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_src WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng booking_pace_detail
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_src s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.STAYING >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_src s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, s.REPORT_DATE)
    
    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'SCSRHL')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_scsrhl WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng booking_pace_detail
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_scsrhl s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.STAYING >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
    MARKET, RATE_CODE, RATE_AMT, 
    ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
    ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE,
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
    BK_SOURCE, COUNTRY, NATIONALITY, 
    CASE WHEN CONVERT(DATE, CREATE_TIME) = ARRIVAL THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_scsrhl s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND STAYING = DATEADD(DAY, -1, s.REPORT_DATE)
    
    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'PHPQ')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_phpq WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_phpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_phpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'ICHL')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_ichl WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_ichl s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_ichl s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'ICPQ')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_icpq WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_icpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_icpq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'REPQ')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_repq WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_repq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_repq s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'CPV')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_cpv WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_cpv s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_cpv s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    
    SET @last_modified_at = (SELECT ISNULL(MAX(MODIFIED_AT), '1900-01-01') FROM booking_pace_detail WHERE PROPERTY= N'HIVT')

    INSERT @iload_data(PROPERTY, REPORT_DATE, MODIFIED_AT)
    SELECT DISTINCT PROPERTY, REPORT_DATE, MODIFIED_AT FROM stg.booking_pace_hivt WHERE MODIFIED_AT > @last_modified_at
    
    -- xóa dữ liệu cũ trong bảng đích
    DELETE d
    FROM booking_pace_detail d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.REPORT_DATE = i.REPORT_DATE

    -- xóa dữ liệu cũ của ngày hôm qua trong bảng booking_pace_history
    DELETE d
    FROM dbo.booking_pace_history d 
    JOIN @iload_data i ON d.PROPERTY = i.PROPERTY AND d.STAYING = DATEADD(DAY, -1, i.REPORT_DATE)
    WHERE i.REPORT_DATE = @today

    -- đưa vào dữ liệu bổ sung vào bảng đích
    INSERT INTO dbo.booking_pace_detail
    SELECT s.REPORT_DATE, FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, s.FILE_NAME
    FROM stg.booking_pace_hivt s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.CONSIDERED_DATE >= s.REPORT_DATE

    -- thêm vào bảng history dữ liệu acutal của ngày STAYING_DATE = REPORT_DATE - 1 với REPORT_DATE là ngày hôm nay
    INSERT INTO dbo.booking_pace_history
    SELECT FORMAT(CONSIDERED_DATE, 'yyyy-MM') AS STAY_MONTH, s.PROPERTY, 
    ARR AS ARRIVAL, DEP AS DEPARTURE, CONSIDERED_DATE AS STAYING, CREATED_DATE AS CREATE_DATE,
    MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
    ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER, 
    NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV,
    NULL AS [STATUS], NULL AS R_TYPE, NULL AS R_CHARGE,
    NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD, 
    SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY, 
    CASE WHEN CREATED_DATE = ARR THEN 1 ELSE 0 END AS BOOKING,
    s.CREATED_AT, s.MODIFIED_AT, FILE_NAME
    FROM stg.booking_pace_hivt s
    JOIN @iload_data i ON s.PROPERTY = i.PROPERTY AND s.REPORT_DATE = i.REPORT_DATE
    WHERE s.REPORT_DATE = @today AND CONSIDERED_DATE = DATEADD(DAY, -1, s.REPORT_DATE)

    DELETE FROM @iload_data;

    

    COMMIT
    RETURN 0 
END TRY
BEGIN CATCH 
    ROLLBACK 
    DECLARE @ERROR_MESSAGE NVARCHAR(2000)
    SELECT @ERROR_MESSAGE = 'ERROR:' + ERROR_MESSAGE()
    RAISERROR(@ERROR_MESSAGE, 16, 1)
END CATCH

END
-- EXEC dbo.sp_iload_booking_pace_detail

GO

/* ------------------------------------------------------------------------------------
-- Kiểm tra dữ liệu trong bảng
*/
SELECT PROPERTY, MIN(REPORT_DATE) AS MIN_DATE, MAX(REPORT_DATE) AS MAX_DATE, COUNT(*) AS NB_ROWS
FROM dbo.booking_pace_detail
GROUP BY PROPERTY
ORDER BY PROPERTY

/*
Crowne Plaza Vientaine	2024-07-27	4248
Crowne Plaza Vientaine	2024-07-28	4072
Crowne Plaza Vientaine	2024-07-29	4112
Crowne Plaza Vientaine	2025-07-27	3298
Crowne Plaza Vientaine	2025-07-28	3246
Crowne Plaza Vientaine	2025-07-29	3111
Sailing Club Signature Resort Phu Quoc	2025-08-01	6240
Sailing Club Signature Resort Phu Quoc	2025-08-02	6239
Sailing Club Signature Resort Phu Quoc	2025-08-03	6286
Sailing Club Signature Resort Phu Quoc	2025-08-04	6244
Sailing Club Signature Resort Phu Quoc	2025-08-05	6272
Soul Boutique Hotel Phu Quoc	2025-08-01	1942
Soul Boutique Hotel Phu Quoc	2025-08-02	1990
Soul Boutique Hotel Phu Quoc	2025-08-03	2063
Soul Boutique Hotel Phu Quoc	2025-08-04	2063
Soul Boutique Hotel Phu Quoc	2025-08-05	2127
Syrena Cruises	2025-07-23	1318
Syrena Cruises	2025-07-24	1333
*/
SELECT PROPERTY, REPORT_DATE, COUNT(*) AS NB_ROWS
FROM dbo.booking_pace_detail
GROUP BY PROPERTY, REPORT_DATE
ORDER BY PROPERTY, REPORT_DATE

SELECT PROPERTY, REPORT_DATE, STAYING, COUNT(*) AS NB_ROWS
FROM dbo.booking_pace_detail
GROUP BY PROPERTY, REPORT_DATE, STAYING
ORDER BY PROPERTY, REPORT_DATE, STAYING
/* ------------------------------------------------------------------------------------
-- Thêm vào từ dữ liệu sample data (không cần thiết)
*/
INSERT INTO dbo.booking_pace_detail
SELECT REPORT_DATE, STAY_MONTH, PROPERTY, ARRIVAL, DEPARTURE, STAYING, CREATE_DATE, MARKET, RATE_CODE, RATE_AMT, 
    TOTAL_TURN_OVER, ARR, ROOM_REV, FB_REV, OTHER_REV,
    [STATUS], R_TYPE, R_CHARGE, 
    N_OF_ROOM, N_OF_ADT, N_OF_CHD, BK_SOURCE, COUNTRY, NATIONALITY, 
    REPORT_DATE AS CREATED_AT, REPORT_DATE AS MODIFIED_AT
FROM dbo.booking_pace_sample_data

/* ------------------------------------------------------------------------------------
-- Fake dữ liệu quá khứ với dữ liệu của ngày 23/07/2025
-- Fake dữ liệu quá khứ với dữ liệu của ngày 01/01/2023
*/
DECLARE @report_date DATE = '2025-07-23'
DECLARE @current_date DATE = DATEADD(YEAR, -1, @report_date)
DECLARE @date_diff INT, @rand FLOAT

WHILE @current_date < @report_date
BEGIN 
    SET @date_diff = DATEDIFF(DAY, @current_date, @report_date)

    INSERT INTO dbo.booking_pace_detail
    SELECT REPORT_DATE, STAY_MONTH, PROPERTY, ARRIVAL, DEPARTURE, STAYING, CREATE_DATE,
        MARKET, RATE_CODE, RATE_AMT, 
        ISNULL(ARR * RANDOM, 0) + ISNULL(ROOM_REV * RANDOM, 0) + ISNULL(FB_REV * RANDOM, 0) + ISNULL(OTHER_REV * RANDOM, 0) AS TOTAL_TURN_OVER, 
        ARR * RANDOM AS ARR, 
        ROOM_REV * RANDOM AS ROOM_REV, 
        FB_REV * RANDOM AS FB_REV, 
        OTHER_REV * RANDOM AS OTHER_REV, 
        [STATUS], R_TYPE, R_CHARGE, 
        FLOOR(N_OF_ROOM * RANDOM) + 1 AS N_OF_ROOM, FLOOR(N_OF_ADT * RANDOM) + 1 AS N_OF_ADT, N_OF_CHD, BK_SOURCE, COUNTRY, NATIONALITY, 
        CREATED_AT, MODIFIED_AT
    FROM
    (SELECT @current_date AS REPORT_DATE, FORMAT(@current_date, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
        DATEADD(DAY, -@date_diff, ARRIVAL) AS ARRIVAL, DATEADD(DAY, -@date_diff, DEPARTURE) AS DEPARTURE, 
        DATEADD(DAY, -@date_diff, STAYING) AS STAYING, DATEADD(DAY, -@date_diff, CREATE_DATE) AS CREATE_DATE, 
        MARKET, RATE_CODE, RATE_AMT, TOTAL_TURN_OVER, ARR, ROOM_REV, FB_REV, OTHER_REV, 
        [STATUS], R_TYPE, R_CHARGE, 
        N_OF_ROOM, N_OF_ADT, N_OF_CHD, BK_SOURCE, COUNTRY, NATIONALITY, 
        CREATED_AT, MODIFIED_AT, 
        RAND(CHECKSUM(NEWID())) * 1.5 AS RANDOM
        FROM dbo.booking_pace_detail
        WHERE REPORT_DATE = @report_date
    ) r
    SET @current_date = DATEADD(DAY, 1, @current_date)
END

/* ------------------------------------------------------------------------------------
-- Test
*/
DELETE
FROM dbo.booking_pace_detail
WHERE PROPERTY = 'Syrena Cruises' AND REPORT_DATE = '2025-07-25'

/*
INSERT INTO dbo.booking_pace_detail
SELECT REPORT_DATE, FORMAT( DATEADD(DAY, 1, ARR), 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
ARR AS ARRIVAL, DEP AS DEPARTURE, DATEADD(DAY, 1, ARR) AS STAYING, CREATED_DATE, 
MARKET_CODE AS MARKET, RATE_CODE, NULL AS RATE_AMT, 
ISNULL(NULL, 0) + ISNULL(ROOM_REVENUE, 0) + ISNULL(FOOD_REVENUE, 0) + ISNULL(OTHER_REVENUE, 0) AS TOTAL_TURN_OVER,
NULL AS ARR, ROOM_REVENUE AS ROOM_REV, FOOD_REVENUE AS FB_REV, OTHER_REVENUE AS OTHER_REV, 
NULL AS STATUS, NULL AS R_TYPE, NULL AS RT_CHARGE, 
NO_ROOMS AS N_OF_ROOM, ADULTS AS N_OF_ADT, CHILDREN AS N_OF_CHD,
SOURCE_CODE AS BK_SOURCE, COUNTRY, COUNTRY AS NATIONALITY
FROM stg.booking_pace_p1
UNION ALL
SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY, 
ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
MARKET, RATE_CODE, RATE_AMT, 
ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER, 
ARR, ROOM_REV, FB_REV, OTHER_REV,
[STATUS], R_TYPE, RT_CHARGE,
N_OF_ROOM, N_OF_ADT, N_OF_CHD, 
BK_SOURCE, COUNTRY, NATIONALITY
FROM stg.booking_pace_p2
UNION ALL
SELECT REPORT_DATE, FORMAT(STAYING, 'yyyy-MM') AS STAY_MONTH, PROPERTY,
ARRIVAL, DEPARTURE, STAYING, CONVERT(DATE, CREATE_TIME) AS CREATE_DATE,
MARKET, RATE_CODE, RATE_AMT, 
ISNULL(ARR, 0) + ISNULL(ROOM_REV, 0) + ISNULL(FB_REV, 0) + ISNULL(OTHER_REV, 0) AS TOTAL_TURN_OVER,
ARR, ROOM_REV, FB_REV, OTHER_REV,
[STATUS], R_TYPE, RT_CHARGE,
N_OF_ROOM, N_OF_ADT, N_OF_CHD,
BK_SOURCE, COUNTRY, NATIONALITY
FROM stg.booking_pace_p3
ORDER BY REPORT_DATE, PROPERTY

SELECT REPORT_DATE, PROPERTY, COUNT(*) AS NB_ROWS
FROM dbo.booking_pace_report
GROUP BY REPORT_DATE, PROPERTY
ORDER BY REPORT_DATE, PROPERTY

SELECT REPORT_DATE, PROPERTY, COUNT(*) AS NB_ROWS
FROM dbo.booking_pace_sample_data
GROUP BY REPORT_DATE, PROPERTY
ORDER BY REPORT_DATE, PROPERTY
*/

SELECT COUNT(*)
FROM dbo.booking_pace_sample_data
WHERE REPORT_DATE = '2023-05-01'

SELECT *
FROM dbo.booking_pace_sample_data
WHERE REPORT_DATE = '2023-05-01'
ORDER BY REPORT_DATE
OFFSET 84940 ROWS 
FETCH NEXT 2 ROWS ONLY;


